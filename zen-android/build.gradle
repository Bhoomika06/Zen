buildscript {
    dependencies {
        classpath 'org.robolectric:robolectric-gradle-plugin:0.13.2'
    }
}

apply plugin: 'com.android.application'

android {
    project.archivesBaseName = "$rootProject.name";

    compileSdkVersion rootProject.ext.COMPILE_SDK
    buildToolsVersion rootProject.ext.BUILD_TOOLS

    defaultConfig {
        applicationId 'zenproject.meditation.android'
        testApplicationId 'zenproject.meditation.android.tests'

        minSdkVersion rootProject.ext.MIN_SDK
        targetSdkVersion rootProject.ext.TARGET_SDK
        versionCode rootProject.ext.VERSION_CODE
        versionName rootProject.ext.VERSION_NAME

        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
    }

    signingConfigs {
        release {
            storePassword "mypassword"
            keyAlias "KeyAlias"
            keyPassword "mypassword"
        }
    }


    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            jniDebuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    dependencies {
        compile project(':rainbow-lib')
        compile project(':circularmenu-library')
        compile 'com.nineoldandroids:library:2.4.0'
        compile 'com.android.support:support-annotations:20.0.0'
        compile 'com.android.support:appcompat-v7:21.0.3'
        compile 'com.afollestad:material-dialogs:0.6.3.3'
        compile 'de.hdodenhof:circleimageview:1.2.2'
        compile('com.novoda:notils:2.2.11') {
            exclude module: 'support-v4'
        }
    }
}

ext {
    REPORT_LOCATIONS = ""
}

def buildTimeFormatted() {
    Calendar instance = Calendar.getInstance()
    instance.setTimeInMillis(System.currentTimeMillis())
    instance.getTime()
}


apply from: "$project.rootDir/analysis-tools/android-robolectric.gradle"
apply from: "$project.rootDir/analysis-tools/android-jacoco.gradle"
apply from: "$project.rootDir/analysis-tools/android-checkstyle.gradle"
apply from: "$project.rootDir/analysis-tools/android-pmd.gradle"
apply from: "$project.rootDir/analysis-tools/android-findbugs.gradle"

task zen dependsOn("build") {

    println "Finished at: " + new Date();

    println "\n"
    println REPORT_LOCATIONS
}


